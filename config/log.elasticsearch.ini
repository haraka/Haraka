
; By default, connections without transactions are stored in a separate
; connections index as they're typically high noise and low signal. To not
; store them at all, set this to false.
; Default: true
;
; log_connections=false


; Elasticsearch servers
[hosts]
; syntax: hostname=key:value. All values are optional.
; Default: 127.0.0.1   -->  http://127.0.0.1:9200
127.0.0.1


; Future (q3-q4 2015) host resolution mechanism, after Matt adds a `selector`
; function as documented here:
; https://www.elastic.co/guide/en/elasticsearch/client/javascript-api/current/configuration.html
; will use the datacenter and weight to choose from N hosts in the same data
; center. Failing that, try hosts in another DC, based on weight.
;
; [hosts]
; es1.lax.example.com=protocol:http, port:9200, datacenter:lax, weight:10
; es2.lax.example.com=protocol:http, port:9200, datacenter:lax, weight:20
; es1.nyc.example.com=protocol:https, port:9201, datacenter:nyc, weight:50
; es2.nyc.example.com=protocol:https, port:9201, datacenter:nyc, weight:60


; don't store connection results from these hosts
[ignore_hosts]
;nagios.tnpi.net


[index]
; default ES index names are shown.
; Transactions include all the connection
; information and are "the good stuff." When a connection has transactions,
; the connection is not saved separately. The distinction is that a connection
; is stored when it has zero transactions. The connections index tends to
; be mostly noise (monitoring, blocked connections, bruteforce auth attempts,
; etc.) and for that reason, some choose not to store them at all.
;
;transaction=smtp-transaction
;connection=smtp-connection


; At the top level, each ES document has three categories: connection, message,
; and plugins. Those names can be customized here.
[top_level_names]
;connection=conn
;plugin=p
;message=msg


; Properties of the connection to include in the ES connection document.
; defaults are shown. These can be reported with another name by adding an ini
; value
[connection_properties]
pipelining
using_tls=tls
relaying=relay
totalbytes=bytes
early_talker=early


; Message headers to store (if present)
[headers]
From
To
Subject
