var test = require("tap").test;
require('../configfile').watch_files = false;
var utils = require("../utils");

var good_v4 = [
  "11.22.33.44",
  "1.2.3.4",
  "129.144.52.38",
  "192.168.1.1",
  "192.168.1.26",
  "13.1.68.3",
  "254.7.237.98",
  "254.157.241.86",
];

var bad_v4 = [
  "1.2.256.4",
  "1.2.300.4",
  "1.2.3.256",
  "1.2.3.300",
  "1.2.3.900",
  "1.256.3.4",
  "1.2.900.4",
  "1.300.3.4",
  "1.900.3.4",
  "256.2.3.4",
  "260.2.3.4",
  "3000.30.30.30",
  "300.2.3.4",
  "300.300.300.300",
  "400.2.3.4",
  "900.2.3.4",
];

var suspect_v4 = [
  "254.157.241.086", // This is valid ipv4 but causes issues on ipv6 mapped ipv4 address processing on some systems
];

var good_v6 = [
  "0000:0000:0000:0000:0000:0000:0000:0000",
  "0000:0000:0000:0000:0000:0000:0000:0001",
  "0:0:0:0:0:0:0:0", // unspecified, full
  "0:0:0:0:0:0:0:1", // loopback, full
  "0:0:0:0:0:0:13.1.68.3", // IPv4-compatible IPv6 address, full, deprecated
  "0:0:0:0:0:FFFF:129.144.52.38", // IPv4-mapped IPv6 address, full
  "::1",
  "1::",
  "1::1.2.3.4",
  "1:2::",
  "1:2::1.2.3.4",
  "1::2:3",
  "1:2:3::",
  "1:2:3::1.2.3.4",
  "1::2:3:4",
  "1:2:3:4::",
  "1:2:3:4::1.2.3.4",
  "1::2:3:4:5",
  "1:2:3:4:5::",
  "1:2:3:4::5:1.2.3.4",
  "1:2:3:4:5::1.2.3.4",
  "1::2:3:4:5:6",
  "1:2:3:4:5:6::",
  "1:2:3:4:5:6:1.2.3.4",
  "1::2:3:4:5:6:7",
  "1:2:3:4:5:6:7:8",
  "1:2:3:4:5:6::8",
  "1:2:3:4:5::7:8",
  "1:2:3:4:5::8",
  "1:2:3:4::7:8",
  "1:2:3:4::8",
  "1:2:3::5:1.2.3.4",
  "1:2:3::7:8",
  "1:2:3::8",
  "1:2::5:1.2.3.4",
  "1:2::7:8",
  "1:2::8",
  "::13.1.68.3", // IPv4-compatible IPv6 address, compressed, deprecated
  "1::5:11.22.33.44",
  "1::5:1.2.3.4",
  "1::7:8",
  "1::8",
  "::1", // loopback, compressed, non-routable
  "2001:0000:1234:0000:0000:C1C0:ABCD:0876",
  "2001:0db8:1234::",
  "2001:db8::",
  "2001:DB8:0:0:8:800:200C:417A", // unicast, full
  "2001:DB8::8:800:200C:417A", // unicast, compressed
  "2002::",
  "2::10",
  "::2:3",
  "::2:3:4",
  "::2:3:4:5",
  "::2:3:4:5:6",
  "::2:3:4:5:6:7",
  "3ffe:0b00:0000:0000:0001:0000:0000:000a",
  "::8",
  "fe80::",
  "fe80:0000:0000:0000:0204:61ff:fe9d:f156",
  "fe80:0:0:0:204:61ff:254.157.241.86",
  "fe80:0:0:0:204:61ff:fe9d:f156",
  "fe80::1",
  "fe80::204:61ff:254.157.241.86",
  "fe80::204:61ff:fe9d:f156",
  "fe80::217:f2ff:254.7.237.98",
  "fe80::217:f2ff:fe07:ed62",
  "FF00::", // compressed, multicast address type
  "FF01:0:0:0:0:0:0:101", // multicast, full
  "FF01::101", // multicast, compressed
  "FF02:0000:0000:0000:0000:0000:0000:0001",
  "ff02::1",
  "::ffff:0:0",
  "::FFFF:129.144.52.38", // IPv4-mapped IPv6 address, compressed
  "::ffff:192.168.1.1",
  "::ffff:192.168.1.26",
  "::", // unspecified, compressed, non-routable
];

var suspect_v6 = [
  "::2:3:4:5:6:7:8", // While technically a valid v6 address it is stupid
	"1::2:", // I'm not sure about this
];

var bad_v6 = [
  "fe80:0000:0000:0000:0204:61ff:254.157.241.086",
  " 2001:0000:1234:0000:0000:C1C0:ABCD:0876  ",
  " 2001:0000:1234:0000:0000:C1C0:ABCD:0876",
  ":::",
  ":",
  "02001:0000:1234:0000:0000:C1C0:ABCD:0876",      // extra 0 not allowed!
  "1111:",
  ":1111:2222:3333:4444::5555",
  "1111:2222:3333:4444::5555:",
  "::1111:2222:3333:4444:5555:6666::",
  ":1111:2222:3333::5555",
  "1111:2222:3333::5555:",
  ":1111:2222::5555",
  "1111:2222::5555:",
  ":1111::5555",
  "1111::5555:",
  "1::1.2.256.4",
  "1::1.2.300.4",
  "1::1.2.3.256",
  "1::1.2.3.300",
  "1::1.2.3.900",
  "1::1.256.3.4",
  "1::1.2.900.4",
  "1::1.300.3.4",
  "1::1.900.3.4",
  "::1.2.256.4",
  "::1.2.300.4",
  "::1.2.3.256",
  "::1.2.3.300",
  "1.2.3.4::",
  "1.2.3.4:1111:2222:3333:4444::5555",
  "1.2.3.4:1111:2222:3333::5555",
  "1.2.3.4:1111:2222::5555",
  "1.2.3.4:1111::5555",
  "1.2.3.4::5555",
  "12345::6:7:8",
  "1:2:3::4:5::7:8",
  "::1.2.3.900",
  "1::256.2.3.4",
  "::1.256.3.4",
  "1::260.2.3.4",
  "::1.2.900.4",
  "1::3000.30.30.30",
  "1::300.2.3.4",
  "1::300.300.300.300",
  "::1.300.3.4",
  "1::400.2.3.4",
  "1::5:1.2.256.4",
  "1::5:1.2.300.4",
  "1::5:1.2.3.256",
  "1::5:1.2.3.300",
  "1::5:1.2.3.900",
  "1::5:1.256.3.4",
  "1::5:1.2.900.4",
  "1::5:1.300.3.4",
  "1::5:1.900.3.4",
  "1::5:256.2.3.4",
  "1::5:260.2.3.4",
  "1::5:3000.30.30.30",
  "1::5:300.2.3.4",
  "1::5:300.300.300.300",
  "1::5:400.2.3.4",
  "1::5:900.2.3.4",
  "1::900.2.3.4",
  "::1.900.3.4",
  "2001:0000:1234:0000:00001:C1C0:ABCD:0876",      // extra 0 not allowed!
  "2001:0000:1234: 0000:0000:C1C0:ABCD:0876",
  " 2001:0000:1234:0000:0000:C1C0:ABCD:0876  0",
  "2001:DB8:0:0:8:800:200C:417A:221", // unicast, full
  "::256.2.3.4",
  "::260.2.3.4",
  "::3000.30.30.30",
  "::300.2.3.4",
  "::300.300.300.300",
  "3ffe:0b00:0000:0001:0000:0000:000a",
  "3ffe:b00::1::a",
  "::400.2.3.4",
  ":::5555",
  "::5555:",
  "::900.2.3.4",
  "FF01::101::2", // multicast, compressed
  "FF02:0000:0000:0000:0000:0000:0000:0000:0001",
  "", // nothing
];

test("Addresses that pass", function (t) {
    tests = good_v4.length;
    t.plan(tests);
    for (var i=0; i < tests; i++) {
        t.ok(utils.is_ipv4(good_v4[i]), "A valid ip v4 address " + good_v4[i])
    }
    t.end();
})
test("Addresses that fail", function (t) {
    tests = bad_v4.length;
    t.plan(tests);
    for (var i=0; i < tests; i++) {
        t.ok(!utils.is_ipv4(bad_v4[i]), "Not ip v4 address " + bad_v4[i])
    }
    t.end();
})
test("Addresses that pass", function (t) {
    tests = good_v6.length;
    t.plan(tests);
    for (var i=0; i < tests; i++) {
        t.ok(utils.is_ipv6(good_v6[i]), "A valid ip v6 address " + good_v6[i])
    }
    t.end();
})
test("Addresses that fail", function (t) {
    tests = bad_v6.length;
    t.plan(tests);
    for (var i=0; i < tests; i++) {
        t.ok(!utils.is_ipv6(bad_v6[i]), "Not ip v6 address " + bad_v6[i])
    }
    t.end();
})
