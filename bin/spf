#!/usr/bin/env node

// SPF test tool

const nopt = require('nopt');
const path = require('path');
const base_path = path.join(__dirname, '..');
const SPF = require(base_path + '/spf').SPF;
const spf = new SPF();

const parsed = nopt({ 'debug': Boolean, 'ip': String, 'helo': String, 'domain': String  });

function print_usage () {
    console.log('Usage: spf [--debug] --ip <ip> --helo <helo> --domain <domain>');
    process.exit(1);
}

if (!parsed.ip || (parsed.ip && (!parsed.domain && !parsed.helo))) {
    print_usage();
}

if (!parsed.debug) {
    SPF.prototype.log_debug = function (str) {}
}

let domain;
if (parsed.domain) {
    domain = /@(.+)$/.exec(parsed.domain);
    if (domain) {
        domain = domain[1];
    }
    else {
        domain = parsed.domain;
    }
}

spf.check_host(parsed.ip, (domain ? domain : parsed.helo), null, function (err, result) {
    if (err) {
        console.log('Error: ' + err.message);
        process.exit(1);
    }
    console.log([
        'ip=' + parsed.ip,
        'helo="' + (parsed.helo ? parsed.helo : '') + '"',
        'domain="' + (domain ? domain : '') + '"',
        'result=' + spf.result(result)
    ].join(' '));
});
